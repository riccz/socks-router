stages:
 - build
 - test
 - upload
 - release

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/socks-router-linux-amd64/${CI_COMMIT_TAG}"

image: "rust:1-bullseye"

build:
  stage: build
  script:
    - rustc --version && cargo --version
    - cargo build --release --verbose
  artifacts:
    paths:
      - target/release/socks-router

test:
  stage: test
  script:
    - rustc --version && cargo --version
    - cargo test --release --verbose

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file target/release/socks-router "${PACKAGE_REGISTRY_URL}/socks-router"

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG  
  script:
    - echo "release job"
  release:
    tag_name: $CI_COMMIT_TAG
    description: 'Automated release'
    assets:
      links:
        - name: 'socks-router'
          url: "${PACKAGE_REGISTRY_URL}/socks-router"

publish:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG  
  script:
    - rustc --version && cargo --version
    # Ensure same version as the tag
    - |
      grep -qE '^\s*version\s*=\s*"'"${CI_COMMIT_TAG}"'"' Cargo.toml
    - cargo publish
